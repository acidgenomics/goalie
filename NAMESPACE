# Generated by roxygen2: do not edit by hand

export(areSamplesUnique)
export(assert)
export(assertAllAreAtomic)
export(assertAllAreNonExisting)
export(assertAllAreValidNames)
export(assertAlpha)
export(assertAnyClass)
export(assertAreGeneAnnotations)
export(assertAreNonExisting)
export(assertAreTranscriptAnnotations)
export(assertAreUniqueGeneNames)
export(assertClass)
export(assertDirectoryExists)
export(assertFactor)
export(assertFileExists)
export(assertFlag)
export(assertHasColnames)
export(assertHasCols)
export(assertHasDimnames)
export(assertHasDims)
export(assertHasInternet)
export(assertHasNames)
export(assertHasRownames)
export(assertHasRows)
export(assertHasUniqueCols)
export(assertHasValidDimnames)
export(assertHasValidNames)
export(assertHeaderLevel)
export(assertHexColor)
export(assertHexColorFunction)
export(assertIdentical)
export(assertIsAHeaderLevel)
export(assertIsAStringOrNULL)
export(assertIsCharacterOrNULL)
export(assertIsDataFrameOrNULL)
export(assertIsGene2symbol)
export(assertIsTx2gene)
export(assertLogical)
export(assertNames)
export(assertScalar)
export(assertScale)
export(assertString)
export(assertURL)
export(assertURLs)
export(assert_all_are_atomic)
export(assert_alpha)
export(assert_any_class)
export(assert_are_non_existing)
export(assert_are_unique_gene_names)
export(assert_has_colnames)
export(assert_has_cols)
export(assert_has_dimnames)
export(assert_has_dims)
export(assert_has_internet)
export(assert_has_names)
export(assert_has_rownames)
export(assert_has_rows)
export(assert_has_unique_cols)
export(assert_has_valid_dimnames)
export(assert_has_valid_names)
export(assert_header_level)
export(assert_hex_color)
export(assert_hex_color_function)
export(assert_identical)
export(assert_scale)
export(assert_that)
export(assert_url)
export(assert_urls)
export(checkAllAreAtomic)
export(checkAlpha)
export(checkAnyClass)
export(checkAreNonExisting)
export(checkAreUniqueGeneNames)
export(checkClass)
export(checkDirectoryExists)
export(checkFactor)
export(checkFileExists)
export(checkFlag)
export(checkHasColnames)
export(checkHasInternet)
export(checkHasRownames)
export(checkHasUniqueCols)
export(checkHasValidDimnames)
export(checkHasValidNames)
export(checkHeaderLevel)
export(checkHexColor)
export(checkHexColorFunction)
export(checkIdentical)
export(checkLogical)
export(checkNames)
export(checkScalar)
export(checkScale)
export(checkString)
export(checkURL)
export(checkURLs)
export(check_all_are_atomic)
export(check_alpha)
export(check_any_class)
export(check_are_non_existing)
export(check_are_unique_gene_names)
export(check_has_colnames)
export(check_has_internet)
export(check_has_rownames)
export(check_has_unique_cols)
export(check_has_valid_dimnames)
export(check_has_valid_names)
export(check_header_level)
export(check_hex_color)
export(check_hex_color_function)
export(check_identical)
export(check_scale)
export(check_url)
export(check_urls)
export(expect_all_are_atomic)
export(expect_alpha)
export(expect_any_class)
export(expect_are_non_existing)
export(expect_are_unique_gene_names)
export(expect_has_colnames)
export(expect_has_rownames)
export(expect_has_unique_cols)
export(expect_has_valid_dimnames)
export(expect_has_valid_names)
export(expect_header_level)
export(expect_hex_color)
export(expect_hex_color_function)
export(expect_scale)
export(expect_url)
export(expect_urls)
export(hasColnames)
export(hasCols)
export(hasDimnames)
export(hasDims)
export(hasName)
export(hasNames)
export(hasRownames)
export(hasRows)
export(has_colnames)
export(has_cols)
export(has_dimnames)
export(has_dims)
export(has_name)
export(has_names)
export(has_rownames)
export(has_rows)
export(isAny)
export(isEmptyFile)
export(isExisting)
export(isIntegerish)
export(isNegative)
export(isNonEmptyFile)
export(isNotNA)
export(isPositive)
export(isScalarDouble)
export(isScalarIntegerish)
export(isString)
export(is_any)
export(is_empty_file)
export(is_existing)
export(is_integerish)
export(is_negative)
export(is_non_empty_file)
export(is_not_na)
export(is_positive)
export(is_scalar_double)
export(is_scalar_integerish)
export(is_string)
export(testAllAreAtomic)
export(testAlpha)
export(testAnyClass)
export(testAreNonExisting)
export(testAreUniqueGeneNames)
export(testClass)
export(testDirectoryExists)
export(testFactor)
export(testFileExists)
export(testFlag)
export(testHasColnames)
export(testHasInternet)
export(testHasRownames)
export(testHasUniqueCols)
export(testHasValidDimnames)
export(testHasValidNames)
export(testHeaderLevel)
export(testHexColor)
export(testHexColorFunction)
export(testIdentical)
export(testLogical)
export(testNames)
export(testScalar)
export(testScale)
export(testString)
export(testURL)
export(testURLs)
export(test_all_are_atomic)
export(test_alpha)
export(test_any_class)
export(test_are_non_existing)
export(test_are_unique_gene_names)
export(test_has_colnames)
export(test_has_internet)
export(test_has_rownames)
export(test_has_unique_cols)
export(test_has_valid_dimnames)
export(test_has_valid_names)
export(test_header_level)
export(test_hex_color)
export(test_hex_color_function)
export(test_identical)
export(test_scale)
export(test_url)
export(test_urls)
export(validNames)
export(validate)
export(validateClasses)
export(validate_that)
importFrom(BiocGenerics,duplicated)
importFrom(BiocGenerics,rowSums)
importFrom(R.utils,capitalize)
importFrom(assertive.base,is2)
importFrom(assertive.base,is_not_na)
importFrom(assertive.code,is_existing)
importFrom(assertive.data,is_hex_color)
importFrom(assertive.files,is_empty_file)
importFrom(assertive.files,is_non_empty_file)
importFrom(assertive.numbers,is_negative)
importFrom(assertive.numbers,is_positive)
importFrom(assertive.properties,assert_has_cols)
importFrom(assertive.properties,assert_has_dimnames)
importFrom(assertive.properties,assert_has_dims)
importFrom(assertive.properties,assert_has_names)
importFrom(assertive.properties,assert_has_rows)
importFrom(assertive.properties,has_colnames)
importFrom(assertive.properties,has_cols)
importFrom(assertive.properties,has_dimnames)
importFrom(assertive.properties,has_dims)
importFrom(assertive.properties,has_names)
importFrom(assertive.properties,has_rows)
importFrom(assertthat,"on_failure<-")
importFrom(assertthat,assert_that)
importFrom(assertthat,validate_that)
importFrom(checkmate,assert)
importFrom(checkmate,assertClass)
importFrom(checkmate,assertDirectoryExists)
importFrom(checkmate,assertFactor)
importFrom(checkmate,assertFileExists)
importFrom(checkmate,assertFlag)
importFrom(checkmate,assertLogical)
importFrom(checkmate,assertNames)
importFrom(checkmate,assertScalar)
importFrom(checkmate,assertString)
importFrom(checkmate,checkClass)
importFrom(checkmate,checkDirectoryExists)
importFrom(checkmate,checkFactor)
importFrom(checkmate,checkFileExists)
importFrom(checkmate,checkFlag)
importFrom(checkmate,checkLogical)
importFrom(checkmate,checkNames)
importFrom(checkmate,checkScalar)
importFrom(checkmate,checkString)
importFrom(checkmate,makeAssertion)
importFrom(checkmate,makeAssertionFunction)
importFrom(checkmate,makeExpectation)
importFrom(checkmate,makeExpectationFunction)
importFrom(checkmate,makeTest)
importFrom(checkmate,makeTestFunction)
importFrom(checkmate,testClass)
importFrom(checkmate,testDirectoryExists)
importFrom(checkmate,testFactor)
importFrom(checkmate,testFileExists)
importFrom(checkmate,testFlag)
importFrom(checkmate,testLogical)
importFrom(checkmate,testNames)
importFrom(checkmate,testScalar)
importFrom(checkmate,testString)
importFrom(checkmate,vname)
importFrom(curl,has_internet)
importFrom(methods,as)
importFrom(methods,formalArgs)
importFrom(methods,is)
importFrom(methods,setGeneric)
importFrom(methods,setMethod)
importFrom(methods,signature)
importFrom(rlang,is_integerish)
importFrom(rlang,is_scalar_double)
importFrom(rlang,is_scalar_integerish)
importFrom(rlang,is_string)
importFrom(utils,capture.output)
importFrom(utils,hasName)
