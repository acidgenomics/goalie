# Generated by roxygen2: do not edit by hand

export("%>%")
export(assertAllAreNonExisting)
export(assertAllAreURL)
export(assertAllAreUniqueGeneNames)
export(assertAllAreValidNames)
export(assertAreGeneAnnotations)
export(assertAreTranscriptAnnotations)
export(assertFormalCompress)
export(assertFormalGene2Symbol)
export(assertFormalInterestingGroups)
export(assertHasRownames)
export(assertHasValidDimnames)
export(assertHasValidNames)
export(assertIsANumberOrNULL)
export(assertIsAStringOrNULL)
export(assertIsAlpha)
export(assertIsAnImplicitInteger)
export(assertIsAnImplicitIntegerOrNULL)
export(assertIsAnIntegerOrNULL)
export(assertIsColorScaleContinuousOrNULL)
export(assertIsColorScaleDiscreteOrNULL)
export(assertIsDir)
export(assertIsFillScaleContinuousOrNULL)
export(assertIsFillScaleDiscreteOrNULL)
export(assertIsHeaderLevel)
export(assertIsHexColorFunctionOrNULL)
export(assertIsImplicitInteger)
export(assertIsImplicitIntegerOrNULL)
export(hasRownames)
export(isAnImplicitInteger)
export(isImplicitInteger)
export(isURL)
export(validDimnames)
export(validNames)
importFrom(S4Vectors,mcols)
importFrom(SummarizedExperiment,rowRanges)
importFrom(assertive.base,assert_all_are_not_na)
importFrom(assertive.base,assert_all_are_true)
importFrom(assertive.base,assert_are_identical)
importFrom(assertive.base,assert_is_identical_to_na)
importFrom(assertive.base,is_not_na)
importFrom(assertive.code,assert_all_are_existing)
importFrom(assertive.code,is_existing)
importFrom(assertive.data,assert_all_are_hex_colors)
importFrom(assertive.data,is_hex_color)
importFrom(assertive.files,assert_all_are_dirs)
importFrom(assertive.files,assert_all_are_existing_files)
importFrom(assertive.files,assert_all_are_non_empty_files)
importFrom(assertive.numbers,assert_all_are_greater_than)
importFrom(assertive.numbers,assert_all_are_greater_than_or_equal_to)
importFrom(assertive.numbers,assert_all_are_in_closed_range)
importFrom(assertive.numbers,assert_all_are_in_open_range)
importFrom(assertive.numbers,assert_all_are_in_range)
importFrom(assertive.numbers,assert_all_are_non_negative)
importFrom(assertive.numbers,assert_all_are_positive)
importFrom(assertive.numbers,is_positive)
importFrom(assertive.properties,assert_are_same_length)
importFrom(assertive.properties,assert_has_colnames)
importFrom(assertive.properties,assert_has_dimnames)
importFrom(assertive.properties,assert_has_dims)
importFrom(assertive.properties,assert_has_names)
importFrom(assertive.properties,assert_has_no_duplicates)
importFrom(assertive.properties,assert_has_rownames)
importFrom(assertive.properties,assert_has_rows)
importFrom(assertive.properties,assert_is_atomic)
importFrom(assertive.properties,assert_is_empty)
importFrom(assertive.properties,assert_is_non_empty)
importFrom(assertive.properties,assert_is_not_null)
importFrom(assertive.properties,assert_is_null)
importFrom(assertive.properties,assert_is_of_length)
importFrom(assertive.properties,assert_is_scalar)
importFrom(assertive.properties,assert_is_vector)
importFrom(assertive.properties,has_colnames)
importFrom(assertive.properties,has_dimnames)
importFrom(assertive.properties,has_dims)
importFrom(assertive.properties,has_names)
importFrom(assertive.properties,has_rownames)
importFrom(assertive.properties,has_rows)
importFrom(assertive.properties,is_scalar)
importFrom(assertive.sets,assert_are_disjoint_sets)
importFrom(assertive.sets,assert_are_intersecting_sets)
importFrom(assertive.sets,assert_are_set_equal)
importFrom(assertive.sets,assert_is_subset)
importFrom(assertive.sets,is_subset)
importFrom(assertive.strings,assert_all_are_matching_regex)
importFrom(assertive.strings,assert_all_are_non_empty_character)
importFrom(assertive.strings,assert_all_are_non_missing_nor_empty_character)
importFrom(assertive.strings,assert_any_are_matching_regex)
importFrom(assertive.types,assert_is_a_bool)
importFrom(assertive.types,assert_is_a_number)
importFrom(assertive.types,assert_is_a_string)
importFrom(assertive.types,assert_is_all_of)
importFrom(assertive.types,assert_is_an_integer)
importFrom(assertive.types,assert_is_any_of)
importFrom(assertive.types,assert_is_call)
importFrom(assertive.types,assert_is_character)
importFrom(assertive.types,assert_is_data.frame)
importFrom(assertive.types,assert_is_environment)
importFrom(assertive.types,assert_is_factor)
importFrom(assertive.types,assert_is_function)
importFrom(assertive.types,assert_is_integer)
importFrom(assertive.types,assert_is_list)
importFrom(assertive.types,assert_is_matrix)
importFrom(assertive.types,assert_is_name)
importFrom(assertive.types,assert_is_numeric)
importFrom(assertive.types,assert_is_symbol)
importFrom(assertive.types,assert_is_tbl_df)
importFrom(assertive.types,is_a_number)
importFrom(assertive.types,is_a_string)
importFrom(basejump,mapGenesToRownames)
importFrom(basejump,sampleData)
importFrom(magrittr,"%>%")
importFrom(rlang,has_length)
