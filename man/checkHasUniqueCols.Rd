% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkHasUniqueCols.R
\name{checkHasUniqueCols}
\alias{checkHasUniqueCols}
\alias{hasUniqueCols}
\alias{check_has_unique_cols}
\alias{testHasUniqueCols}
\alias{test_has_unique_cols}
\alias{assertHasUniqueCols}
\alias{assert_has_unique_cols}
\alias{expect_has_unique_cols}
\title{Does the Object Have Columns with Unique Values?}
\usage{
checkHasUniqueCols(x)

check_has_unique_cols(x)

testHasUniqueCols(x)

test_has_unique_cols(x)

assertHasUniqueCols(x, .var.name = checkmate::vname(x), add = NULL)

assert_has_unique_cols(x, .var.name = checkmate::vname(x), add = NULL)

expect_has_unique_cols(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{string}. Name of the checked object to print in assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Checks a matrix for duplicated columns, which reprent samples. Duplicate
rows are allowed here, because many genes (rows) can contain all zeros.
}
\section{SummarizedExperiment}{


If the object is a \code{SummarizedExperiment}, then the primary \code{assay()} matrix
is checked for duplicated columns.
}

\examples{
## Pass ====
x <- matrix(data = seq_len(20L), ncol = 2L)
checkHasUniqueCols(x)

## Fail ====
x <- matrix(data = rep(seq_len(10L), times = 2L), ncol = 2L)
checkHasUniqueCols(x)
}
\author{
Michael Steinbaugh
}
