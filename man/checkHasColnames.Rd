% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goalie-checkHasColnames.R
\name{checkHasColnames}
\alias{checkHasColnames}
\alias{hasColnames}
\alias{has_colnames}
\alias{check_has_colnames}
\alias{testHasColnames}
\alias{test_has_colnames}
\alias{assertHasColnames}
\alias{assert_has_colnames}
\alias{expect_has_colnames}
\title{Does the Object Have Column Names?}
\usage{
checkHasColnames(x)

check_has_colnames(x)

testHasColnames(x)

test_has_colnames(x)

assertHasColnames(x, .var.name = checkmate::vname(x), add = NULL)

assert_has_colnames(x, .var.name = checkmate::vname(x), add = NULL)

expect_has_colnames(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{\code{character(1)}. Name of the checked object to print in messages.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Does the Object Have Column Names?
}
\examples{
## Pass ====
x <- data.frame(
    "sample1" = c(1L, 2L),
    "sample2" = c(3L, 4L),
    row.names = c("gene1", "gene2")
)
print(x)
checkHasColnames(x)

## Fail ====
x <- data.frame()
print(x)
colnames(x)
checkHasColnames(x)

x <- S4Vectors::DataFrame()
print(x)
colnames(x)
checkHasColnames(x)
}
