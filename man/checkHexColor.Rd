% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkHexColor.R
\name{checkHexColor}
\alias{checkHexColor}
\alias{hexColor}
\alias{hex_color}
\alias{check_hex_color}
\alias{testHexColor}
\alias{test_hex_color}
\alias{assertHexColor}
\alias{assert_hex_color}
\alias{expect_hex_color}
\title{Does the Argument Contain Hexadecimal Colors?}
\usage{
checkHexColor(x)

check_hex_color(x)

testHexColor(x)

test_hex_color(x)

assertHexColor(x, .var.name = checkmate::vname(x), add = NULL)

assert_hex_color(x, .var.name = checkmate::vname(x), add = NULL)

expect_hex_color(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{string}. Name of the checked object to print in assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{XXX}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Does the Argument Contain Hexadecimal Colors?
}
\examples{
## Pass ====
x <- viridis::viridis(n = 2L)
checkHexColorFunction(x)

## Fail ====
x <- ggplot2::scale_colour_manual
checkHexColorFunction(x)
}
\seealso{
\code{assertive::is_hex_color()}.
}
