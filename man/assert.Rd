% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assert.R
\name{assert}
\alias{assert}
\title{Assert that certain conditions are true}
\usage{
assert(..., exprs, local = TRUE)
}
\arguments{
\item{...}{Any number of R expressions that return \code{logical(1)}, each of
which should evaluate to \code{TRUE}.}

\item{exprs}{any number of (typically but not necessarily
    \code{\link{logical}}) \R expressions, which should each evaluate to
    (a logical vector of all)
    \code{\link{TRUE}}.  Use \emph{either} \code{\dots} \emph{or}
    \code{exprs}, the latter typically an unevaluated expression of the
    form \preformatted{{
   expr1
   expr2
   ....
}}
  }

\item{local}{(only when \code{exprs} is used:) indicates the
    \code{\link{environment}} in which the expressions should be
    evaluated; by default the one where \code{stopifnot()} has been called from.}
}
\description{
\code{assert} is a drop-in replacement for \code{stopifnot} supporting more informative
error messages.
}
\note{
Don't use \code{assertive::assert_that} as a general \code{stopifnot}
replacement. It doesn't currently catch everything, and isn't hardened for S4
methods.
}
\examples{
assert(
    is.atomic("example"),
    is.character("example")
)
}
\seealso{
\itemize{
\item \code{stopifnot}.
\item \code{assertthat::assert_that}.
\item \code{checkmate::assert}.
}
}
