% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/goalie-checkHasLength.R
\name{checkHasLength}
\alias{checkHasLength}
\alias{hasLength}
\alias{has_length}
\alias{check_has_length}
\alias{testHasLength}
\alias{test_has_length}
\alias{assertHasLength}
\alias{assert_has_length}
\alias{expect_has_length}
\title{Does an Object Contain Any Information?}
\usage{
checkHasLength(x)

check_has_length(x)

testHasLength(x)

test_has_length(x)

assertHasLength(x, .var.name = checkmate::vname(x), add = NULL)

assert_has_length(x, .var.name = checkmate::vname(x), add = NULL)

expect_has_length(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{\code{character(1)}. Name of the checked object to print in messages.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Does an Object Contain Any Information?
}
\examples{
## Pass ====
checkHasLength(c("foo", "bar"))
checkHasLength(matrix(data = seq_len(100L), nrow = 10L))

## Fail ====
checkHasLength(NULL)
checkHasLength(character())
checkHasLength(matrix())
}
