% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validNames.R
\name{validNames}
\alias{validNames}
\alias{assertAreValidNames}
\alias{assertHasValidNames}
\alias{validDimnames}
\alias{assertHasValidDimnames}
\title{Are the Names Syntatically Valid?}
\usage{
validNames(names)

assertAreValidNames(names)

assertHasValidNames(x)

validDimnames(x)

assertHasValidDimnames(x)
}
\arguments{
\item{names}{\code{character}. Names (e.g. rownames, colnames).}

\item{x}{Object.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Are the Names Syntatically Valid?
}
\examples{
# Dots (periods) and underscores are valid.
validNames(c("sample.1", "sample_1"))

# Can't begin with a number.
validNames("293cells")

# Spaces, dashes (hyphens), and other non-alphanumerics aren't valid.
validNames("sample 1")
validNames("cell-AAAAAAAA")
validNames("GFP+")

assertAreValidNames(c("sample1", "sample2"))

list <- list(example = 1L)
names(list)
assertHasValidNames(list)

# Check rows and columns (dimnames) in a single call.
validDimnames(datasets::iris)    # TRUE
validDimnames(datasets::mtcars)  # FALSE
}
\seealso{
\itemize{
\item \code{checkmate::makeAssertionFunction()}.
}
}
