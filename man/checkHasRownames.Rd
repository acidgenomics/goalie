% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkHasRownames.R
\name{checkHasRownames}
\alias{checkHasRownames}
\alias{hasRownames}
\alias{has_rownames}
\alias{check_has_rownames}
\alias{testHasRownames}
\alias{test_has_rownames}
\alias{assertHasRownames}
\alias{assert_has_rownames}
\alias{expect_has_rownames}
\title{Does the Object Have Row Names?}
\usage{
checkHasRownames(x)

check_has_rownames(x)

testHasRownames(x)

test_has_rownames(x)

assertHasRownames(x, .var.name = checkmate::vname(x), add = NULL)

assert_has_rownames(x, .var.name = checkmate::vname(x), add = NULL)

expect_has_rownames(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{XXX}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Does the Object Have Row Names?
}
\section{Functions}{
\itemize{
\item \code{check_has_rownames}: snake alias.
}}

\section{data.frame}{


Standard \code{data.frame} class objects cannot have \code{NULL} row names defined.
Here we are checking to see if a \code{data.frame} has soft \code{NULL} row names,
meaning that they return as a sequence that is identical to the number of
rows.
}

\examples{
## Pass ====
x <- data.frame(
    "sample1" = c(1L, 2L),
    "sample2" = c(3L, 4L),
    row.names = c("gene1", "gene2")
)
print(x)
checkHasRownames(x)

## Fail ====
x <- data.frame(a = seq_len(2L))
print(x)
# Standard data frame doesn't allow NULL row names.
rownames(x)
checkHasRownames(x)

x <- S4Vectors::DataFrame(a = seq_len(2L))
print(x)
# S4 data frame does allow NULL row names.
rownames(x)
checkHasRownames(x)
}
