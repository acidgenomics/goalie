% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-sets.R
\name{sets}
\alias{sets}
\alias{isSubset}
\alias{isSuperset}
\alias{areDisjointSets}
\alias{areIntersectingSets}
\alias{areSetEqual}
\title{Set comparisons}
\usage{
isSubset(x, y)

isSuperset(x, y)

areDisjointSets(x, y, .xname = getNameInParent(x),
  .yname = getNameInParent(y))

areIntersectingSets(x, y, .xname = get_name_in_parent(x),
  .yname = get_name_in_parent(y))

areSetEqual(x, y, .xname = get_name_in_parent(x),
  .yname = get_name_in_parent(y))
}
\arguments{
\item{x}{Object.}

\item{y}{Secondary object.}

\item{.xname}{\emph{Not intended to be used directly.}}

\item{.yname}{\emph{Not intended to be used directly.}}
}
\value{
\code{TRUE} on success;
\code{FALSE} on failure, with \code{cause} \link[base:attributes]{attribute} set.
}
\description{
Set comparisons
}
\examples{
## Pass ====
isSubset(x = "a", y = c("a", "b"))

## This assert is particularly useful for checking required columns.
isSuperset(
    x = colnames(datasets::ChickWeight),
    y = c("Time", "weight", "Diet")
)

areDisjointSets(x = c("a", "b"), y = c("c", "d"))
areIntersectingSets(x = c("a", "b"), y = c("b", "c"))
areSetEqual(x = c("a", "b"), y = c("b", "a"))

## Fail ====
isSubset(x = "c", y = c("a", "b"))
isSuperset(
    x = c("Time", "weight", "Diet"),
    y = colnames(datasets::ChickWeight)
)

areDisjointSets(x = c("a", "b"), y = c("b", "a"))
areIntersectingSets(x = c("a", "b"), y = c("c", "d"))
areSetEqual(x = c("a", "b"), y = c("b", "c"))
}
\seealso{
\itemize{
\item \code{assertive.sets::is_subset()}.
\item \code{assertive.sets::is_superset()}.
\item \code{assertive.sets::are_disjoint_sets()}.
\item \code{assertive.sets::are_intersecting_sets()}.
\item \code{assertive.sets::are_set_equal()}.
}
}
