% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isIntegerish.R
\name{isIntegerish}
\alias{isIntegerish}
\alias{isInt}
\title{Is Integerish?}
\usage{
isIntegerish(x, n = NULL, finite = NULL)

isInt(x, finite = NULL)
}
\arguments{
\item{x}{Object.}

\item{n}{Expected length of a vector.}

\item{finite}{Whether all values of the vector are finite. The
non-finite values are \code{NA}, \code{Inf}, \code{-Inf} and \code{NaN}. Setting this
to something other than \code{NULL} can be expensive because the whole
vector needs to be traversed and checked.}
}
\value{
\itemize{
\item \code{are*}/\code{contains*}/\code{has*}/\code{is*}:
\code{logical(1)}. Boolean flag (\code{TRUE}/\code{FALSE}).
Intended to be used in combination with \code{assert()} function.
\item \code{check*}:
\code{TRUE} on success or \code{character} on failure.
Intended to be used in combination with \code{validate()} function.
\item \code{assert*}:
\code{TRUE} on success or error (\code{stop()}) on failure.
}
}
\description{
Check for valid input of either explicit (e.g. \code{1L}) and/or implict
(e.g. \code{1}) integer.
}
\section{Functions}{
\itemize{
\item \code{isInt}: Short alias for \code{isScalarIntegerish}.
}}

\examples{
isIntegerish(c(1, 2))

## Requires scalar integerish.
isInt(1)
isInt(1L)
}
\seealso{
\itemize{
\item \code{rlang::is_integerish()}.
\item \code{rlang::is_scalar_integer()}.
\item \code{rlang::is_scalar_integerish()}.
\item \code{checkmate::checkIntegerish}.
\item \code{checkmate::checkInt}.
\item \code{assertive::is_a_number}.
}
}
