% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assertFormalGene2Symbol.R
\name{assertFormalGene2Symbol}
\alias{assertFormalGene2Symbol}
\title{Assert Formal Gene-to-Symbol Mappings}
\usage{
assertFormalGene2Symbol(object, genes, gene2symbol)
}
\arguments{
\item{object}{Object class supporting \code{rownames}. All rownames in this object
must intersect with the rownames defined in the \code{gene2symbol} argument.}

\item{genes}{\code{character}. Gene identifiers. Note that gene names (symbols)
are also supported, but not recommended if the stable IDs can be easily
provided instead.}

\item{gene2symbol}{\code{Gene2Symbol}. Gene-to-symbol mappings. Must contain
\code{geneID} and \code{geneName} columns, with rownames defined. All of the \code{object}
rownames must be defined here, otherwise the function will error.}
}
\value{
Always stop on error.
}
\description{
Assert Formal Gene-to-Symbol Mappings
}
\examples{
object <- DataFrame(
    "sample1" = c(1L, 2L),
    "sample2" = c(3L, 4L),
    row.names = c("gene1", "gene2")
)
print(object)

gene2symbol <- Gene2Symbol(
    object = DataFrame(
        geneID = c("ENSG00000000003", "ENSG00000000005"),
        geneName = c("TSPAN6", "TNMD"),
        row.names = rownames(object)
    )
)
print(gene2symbol)

geneIDs <- gene2symbol[["geneID"]]
print(geneIDs)

geneNames <- gene2symbol[["geneName"]]
print(geneNames)

assertFormalGene2Symbol(
    object = object,
    genes = geneIDs,
    gene2symbol = gene2symbol
)
assertFormalGene2Symbol(
    object = object,
    genes = geneNames,
    gene2symbol = gene2symbol
)
}
