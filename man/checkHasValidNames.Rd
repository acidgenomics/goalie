% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkHasValidNames.R
\name{checkHasValidNames}
\alias{checkHasValidNames}
\alias{hasValidNames}
\alias{has_valid_names}
\alias{check_has_valid_names}
\alias{testHasValidNames}
\alias{test_has_valid_names}
\alias{assertHasValidNames}
\alias{assert_has_valid_names}
\alias{expect_has_valid_names}
\title{Does the Object Have Syntactically Valid Names?}
\usage{
checkHasValidNames(x)

check_has_valid_names(x)

testHasValidNames(x)

test_has_valid_names(x)

assertHasValidNames(x, .var.name = checkmate::vname(x), add = NULL)

assert_has_valid_names(x, .var.name = checkmate::vname(x), add = NULL)

expect_has_valid_names(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{XXX}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Does the Object Have Syntactically Valid Names?
}
\examples{
## Pass ====
x <- list(a = 1, b = 2)
checkHasValidNames(x)

## Fail ====
x <- list(
    `1`       = 1,  # can't start with number
    `foo bar` = 2,  # no spaces
    `foo-bar` = 3   # no hyphens
)
print(x)
checkHasValidNames(x)
}
\seealso{
\code{validNames()}.
}
