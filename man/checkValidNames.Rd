% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkValidNames.R
\name{checkValidNames}
\alias{checkValidNames}
\alias{check_valid_names}
\alias{testValidNames}
\alias{test_valid_names}
\alias{assertValidNames}
\alias{assert_valid_names}
\alias{expect_valid_names}
\title{Are These Valid Names?}
\usage{
checkValidNames(names)

check_valid_names(names)

testValidNames(names)

test_valid_names(names)

assertValidNames(names, .var.name = checkmate::vname(names),
  add = NULL)

assert_valid_names(names, .var.name = checkmate::vname(names),
  add = NULL)

expect_valid_names(names, info = NULL, label = vname(x))
}
\arguments{
\item{names}{\code{character}. Element names (e.g. row names, column names).}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{\code{character(1)}. Name of the checked object to print in messages.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Are These Valid Names?
}
\examples{
## Dots (periods) and underscores are valid.
checkValidNames(c("sample.1", "sample_1"))

## Can't begin with a number.
testValidNames("293cells")

## Spaces, dashes (hyphens), and other non-alphanumerics aren't valid.
testValidNames("sample 1")
testValidNames("cell-AAAAAAAA")
testValidNames("GFP+")
}
\seealso{
\itemize{
\item \code{make.names()}.
\item \code{basejump::makeNames()}.
}
}
