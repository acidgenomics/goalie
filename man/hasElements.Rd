% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-scalar-hasElements.R
\name{hasElements}
\alias{hasElements}
\alias{isEmpty}
\alias{isNonEmpty}
\alias{isOfDimension}
\alias{isOfLength}
\title{Does the input have elements?}
\usage{
isEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))

isNonEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))

hasElements(x, n, .xname = getNameInParent(x))

isOfDimension(x, n, .xname = getNameInParent(x))

isOfLength(x, n, .xname = getNameInParent(x))

isNonEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))
}
\arguments{
\item{x}{Object.}

\item{metric}{XXX.}

\item{.xname}{\emph{Not intended to be used directly.}}

\item{n}{XXX.}
}
\value{
\code{TRUE} on success;
\code{FALSE} on failure, with \code{cause} \link[base:attributes]{attribute} set.
}
\description{
Does the input have elements?
}
\examples{
## Pass ====
hasElements("hello", n = 1)
hasElements(list(a = 1, b = 2), n = 2)

## Fail ====
hasElements(list(), n = 1)
}
\seealso{
\itemize{
\item \code{assertive.properties::is_empty()}.
\item \code{assertive.properties::is_non_empty()}.
\item \code{assertive.properties::has_elements()}.
\item \code{assertive.properties::is_of_dimension()}.
\item \code{assertive.properties::is_of_length()}.
\item \code{assertive.properties::is_non_empty()}.
}
}
