% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-hasElements.R
\name{hasElements}
\alias{hasElements}
\alias{isEmpty}
\alias{isNonEmpty}
\alias{isOfDimension}
\alias{isOfLength}
\title{Does the input have elements?}
\usage{
isEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))

isNonEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))

hasElements(x, n, .xname = getNameInParent(x))

isOfDimension(x, n, .xname = getNameInParent(x))

isOfLength(x, n, .xname = getNameInParent(x))

isNonEmpty(x, metric = c("length", "elements"),
  .xname = getNameInParent(x))
}
\arguments{
\item{x}{Object.}

\item{.xname}{\emph{Not intended to be used directly.}}
}
\value{
\itemize{
\item \code{are*}/\code{contains*}/\code{has*}/\code{is*}: \code{logical(1)}.
Boolean flag (\code{TRUE}/\code{FALSE}). Intended to be used in combination with
\code{assert} function.
\item \code{check*}: \code{TRUE} on success, \code{character(1)} on failure.
Intended to be used in combination with \code{validate} function.
\item \code{assert*}: \code{TRUE} on success, error (\code{stop}) on failure.
}
}
\description{
Does the input have elements?
}
\examples{
## Pass ====
hasElements("hello", n = 1)
hasElements(list(a = 1, b = 2), n = 2)

## Fail ====
hasElements(list(), n = 1)
}
\seealso{
\itemize{
\item \code{assertive.properties::is_empty()}.
\item \code{assertive.properties::is_non_empty()}.
\item \code{assertive.properties::has_elements()}.
}
}
