% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isScale.R
\name{isScale}
\alias{isScale}
\title{Does the Argument Contain a ggplot2 Scale?}
\usage{
isScale(x, scale = c("continuous", "discrete"), aes = c("colour",
  "fill"), null.ok = FALSE)
}
\arguments{
\item{x}{Object.}

\item{scale}{\code{string}. Type of scale, either \code{"continuous"} or \code{"discrete"}.}

\item{aes}{\code{string}. Aesthetic mapping, either \code{"colour"} or \code{"fill"}. Note
that ggplot2 prefers British spelling, so we're enforcing that convention
here.}

\item{null.ok}{\code{logical(1)}. If set to \code{TRUE}, \code{x} may also be \code{NULL}.}
}
\value{
\itemize{
\item \code{are*}/\code{contains*}/\code{has*}/\code{is*}:
\code{logical(1)}. Boolean flag (\code{TRUE}/\code{FALSE}).
Intended to be used in combination with \code{assert()} function.
\item \code{check*}:
\code{TRUE} on success or \code{character} on failure.
Intended to be used in combination with \code{validate()} function.
\item \code{assert*}:
\code{TRUE} on success or error (\code{stop()}) on failure.
}
}
\description{
Does the Argument Contain a ggplot2 Scale?
}
\examples{
library(ggplot2)

colour_c <- scale_colour_gradient(low = "red", high = "blue")
class(colour_c)

colour_d <- scale_colour_manual(values = c("red", "blue"))
class(colour_d)

fill_c <- scale_fill_gradient(low = "red", high = "blue")
class(fill_c)

fill_d <- scale_fill_manual(values = c("red", "blue"))
class(fill_d)

isScale(x = colour_c, scale = "continuous", aes = "colour")
isScale(x = colour_d, scale = "discrete", aes = "colour")
isScale(x = fill_c, scale = "continuous", aes = "fill")
isScale(x = fill_d, scale = "discrete", aes = "fill")
}
