% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-isGGScale.R
\name{isGGScale}
\alias{isGGScale}
\title{Does the Input Contain a ggplot2 Scale?}
\usage{
isGGScale(x, scale = c("continuous", "discrete"), aes = c("colour",
  "fill"))
}
\arguments{
\item{x}{Object.}

\item{scale}{\code{character(1)}.
Type of scale, either \code{"continuous"} or \code{"discrete"}.}

\item{aes}{\code{character(1)}.
Aesthetic mapping, either \code{"colour"} or \code{"fill"}. Note that ggplot2 prefers
British spelling, so we're enforcing that convention here.}
}
\value{
\itemize{
\item \code{are*}/\code{contains*}/\code{has*}/\code{is*}: \code{logical(1)}.
Boolean flag (\code{TRUE}/\code{FALSE}). Intended to be used in combination with
\code{assert} function.
\item \code{check*}: \code{TRUE} on success, \code{character(1)} on failure.
Intended to be used in combination with \code{validate} function.
\item \code{assert*}: \code{TRUE} on success, error (\code{stop}) on failure.
}
}
\description{
Does the Input Contain a ggplot2 Scale?
}
\examples{
library(ggplot2)

colour_c <- scale_colour_gradient(low = "red", high = "blue")
class(colour_c)

colour_d <- scale_colour_manual(values = c("red", "blue"))
class(colour_d)

fill_c <- scale_fill_gradient(low = "red", high = "blue")
class(fill_c)

fill_d <- scale_fill_manual(values = c("red", "blue"))
class(fill_d)

isGGScale(x = colour_c, scale = "continuous", aes = "colour")
isGGScale(x = colour_d, scale = "discrete", aes = "colour")
isGGScale(x = fill_c, scale = "continuous", aes = "fill")
isGGScale(x = fill_d, scale = "discrete", aes = "fill")
}
