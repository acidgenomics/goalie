% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matchArgsToDoCall.R
\name{matchArgsToDoCall}
\alias{matchArgsToDoCall}
\title{Match arguments to \code{do.call}}
\usage{
matchArgsToDoCall(args = NULL, removeFormals = NULL,
  which = sys.parent(n = 1L), verbose = getOption("goalie.traceback",
  FALSE))
}
\arguments{
\item{args}{a \emph{list} of arguments to the function call.  The
    \code{names} attribute of \code{args} gives the argument names.}

\item{removeFormals}{\code{character}.
Names of formal arguments to remove from \code{args} list.}

\item{which}{the frame number if non-negative, the number of frames
    to go back if negative.}

\item{verbose}{\code{logical(1)}.
Run the function with verbose messages?
\emph{It is only recommended to enable this when debugging.}}
}
\value{
\code{list}.
Arguments to pass to \code{\link[base:do.call]{do.call()}}.
}
\description{
Match arguments to \code{do.call}
}
\examples{
## Match the arguments in call.
fun <- function(object, xxx, ...) {
    args <- matchArgsToDoCall(
        args = list(object = object, collapse = " "),
        removeFormals = "xxx"
    )
    args
}
fun(c("hello", "world"))

## Pass the arguments to `do.call()`.
fun <- function(object, xxx, ...) {
    do.call(
        what = paste,
        args = matchArgsToDoCall(
            args = list(collapse = " "),
            removeFormals = "xxx"
        )
    )
}
fun(c("hello", "world"))
}
\seealso{
\itemize{
\item \code{standardizeCall()}.
\item \code{do.call()}.
}
}
