% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkHeaderLevel.R
\name{checkHeaderLevel}
\alias{checkHeaderLevel}
\alias{headerLevel}
\alias{check_header_level}
\alias{testHeaderLevel}
\alias{test_header_level}
\alias{assertHeaderLevel}
\alias{assert_header_level}
\alias{expect_header_level}
\title{Does the Argument Contain a Markdown Header Level?}
\usage{
checkHeaderLevel(x)

check_header_level(x)

testHeaderLevel(x)

test_header_level(x)

assertHeaderLevel(x, .var.name = checkmate::vname(x), add = NULL)

assert_header_level(x, .var.name = checkmate::vname(x), add = NULL)

expect_header_level(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{string}. Name of the checked object to print in assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
Markdown supports header levels \code{1}-\code{7} (\code{<H1>}-\code{<H7>}).
}
\examples{
## Pass ====
checkHeaderLevel(1)

## Fail ====
checkHeaderLevel(0)
}
