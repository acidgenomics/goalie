% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkAlpha.R
\name{checkAlpha}
\alias{checkAlpha}
\alias{alpha}
\alias{check_alpha}
\alias{testAlpha}
\alias{test_alpha}
\alias{assertAlpha}
\alias{assert_alpha}
\alias{expect_alpha}
\title{Does the Argument Contain an Alpha Level?}
\usage{
checkAlpha(x)

check_alpha(x)

testAlpha(x)

test_alpha(x)

assertAlpha(x, .var.name = checkmate::vname(x), add = NULL)

assert_alpha(x, .var.name = checkmate::vname(x), add = NULL)

expect_alpha(x, info = NULL, label = vname(x))
}
\arguments{
\item{x}{Object.}

\item{.var.name}{\code{character(1)}. Name of the checked object to print in
assertions.}

\item{add}{\code{AssertCollection}. Extra information to be included in the
message for the testthat reporter. See \code{testthat::expect_that()}.}

\item{info}{\code{character}. Extra information to be included in the message for
the testthat reporter. See \code{testthat::expect_that()}.}

\item{label}{\code{character(1)}. Name of the checked object to print in messages.}
}
\value{
\itemize{
\item \code{boolean flag} for \code{are/has/is*()} functions.
\item Stop on error for \code{assert*()} functions
(see \code{stop()} or \code{stopifnot()} for details).
}
}
\description{
An alpha level must be a \code{scalar numeric} greater than 0 and less than 1.
}
\examples{
## Pass ====
checkAlpha(0.05)

## Fail ====
checkAlpha("xxx")
checkAlpha(1L)
}
